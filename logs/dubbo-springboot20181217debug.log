2018-12-17 20:55:53.898 [main-SendThread(127.0.0.1:2181)] DEBUG
				org.apache.zookeeper.ClientCnxn-Got ping response for sessionid: 0x10001d0436a0001 after 2ms
2018-12-17 20:56:07.232 [main-SendThread(127.0.0.1:2181)] DEBUGorg.apache.zookeeper.ClientCnxn-Got ping response for sessionid: 0x10001d0436a0001 after 2ms
2018-12-17 20:56:15.703 [main] INFO com.alibaba.dubbo.common.logger.LoggerFactory-using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
2018-12-17 20:56:15.707 [main] INFO c.a.b.d.c.event.WelcomeLogoApplicationListener-

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.5) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2018-12-17 20:56:15.712 [main] INFO c.a.b.d.c.e.OverrideDubboConfigApplicationListener-Dubbo Config was overridden by externalized configuration {}
2018-12-17 20:56:15.785 [background-preinit] DEBUGo.h.v.m.ResourceBundleMessageInterpolator-Loaded expression factory via original TCCL
2018-12-17 20:56:15.797 [background-preinit] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-12-17 20:56:15.797 [background-preinit] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-12-17 20:56:15.798 [background-preinit] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-12-17 20:56:15.799 [background-preinit] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-12-17 20:56:15.799 [background-preinit] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-12-17 20:56:16.932 [main] DEBUGc.a.d.c.s.c.annotation.DubboConfigBindingRegistrar-There is no property for binding to dubbo config class [com.alibaba.dubbo.config.ApplicationConfig] within prefix [dubbo.application]
2018-12-17 20:56:16.933 [main] DEBUGc.a.d.c.s.c.annotation.DubboConfigBindingRegistrar-There is no property for binding to dubbo config class [com.alibaba.dubbo.config.ModuleConfig] within prefix [dubbo.module]
2018-12-17 20:56:16.933 [main] DEBUGc.a.d.c.s.c.annotation.DubboConfigBindingRegistrar-There is no property for binding to dubbo config class [com.alibaba.dubbo.config.RegistryConfig] within prefix [dubbo.registry]
2018-12-17 20:56:16.933 [main] DEBUGc.a.d.c.s.c.annotation.DubboConfigBindingRegistrar-There is no property for binding to dubbo config class [com.alibaba.dubbo.config.ProtocolConfig] within prefix [dubbo.protocol]
2018-12-17 20:56:16.933 [main] DEBUGc.a.d.c.s.c.annotation.DubboConfigBindingRegistrar-There is no property for binding to dubbo config class [com.alibaba.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
2018-12-17 20:56:16.934 [main] DEBUGc.a.d.c.s.c.annotation.DubboConfigBindingRegistrar-There is no property for binding to dubbo config class [com.alibaba.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
2018-12-17 20:56:16.934 [main] DEBUGc.a.d.c.s.c.annotation.DubboConfigBindingRegistrar-There is no property for binding to dubbo config class [com.alibaba.dubbo.config.ConsumerConfig] within prefix [dubbo.consumer]
2018-12-17 20:56:18.052 [main] INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8080"]
2018-12-17 20:56:18.063 [main] INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2018-12-17 20:56:18.064 [main] INFO org.apache.catalina.core.StandardEngine-Starting Servlet Engine: Apache Tomcat/9.0.12
2018-12-17 20:56:18.082 [main] INFO org.apache.catalina.core.AprLifecycleListener-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\java\jdk\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;D:/soft/java/jre/bin/server;D:/soft/java/jre/bin;D:/soft/java/jre/lib/amd64;C:\Program Files\Python37\Scripts\;C:\Program Files\Python37\;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\soft\java\jdk\bin;D:\soft\java\jdk\jre\bin;D:\soft\apache-maven-3.5.3\bin;D:\soft\apache-ant-1.9.11\bin;D:\soft\gradle-4.6\bin;D:\soft\GO\bin;C:\Program Files\Git\cmd;C:\Python27;C:\Users\moshiyong\AppData\Local\Microsoft\WindowsApps;C:\Users\moshiyong\go\bin;D:\soft\eclipse;;.]
2018-12-17 20:56:18.217 [main] INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2018-12-17 20:56:18.507 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:18.513 [main] WARN c.a.d.c.spring.extension.SpringExtensionFactory- [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:18.514 [main] WARN c.a.d.c.spring.extension.SpringExtensionFactory- [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:18.604 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:18.697 [main] DEBUGo.h.v.i.engine.resolver.TraversableResolvers-Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-12-17 20:56:18.698 [main] DEBUGo.h.v.m.ResourceBundleMessageInterpolator-Loaded expression factory via original TCCL
2018-12-17 20:56:18.710 [main] DEBUGo.h.v.i.engine.resolver.TraversableResolvers-Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-12-17 20:56:18.712 [main] DEBUGo.h.validator.internal.engine.ConfigurationImpl-Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-12-17 20:56:18.712 [main] DEBUGo.h.validator.internal.engine.ConfigurationImpl-Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-12-17 20:56:18.713 [main] DEBUGo.h.validator.internal.engine.ConfigurationImpl-Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-12-17 20:56:18.715 [main] DEBUGo.h.v.internal.xml.config.ValidationXmlParser-Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-12-17 20:56:18.715 [main] DEBUGo.h.v.internal.xml.config.ResourceLoaderHelper-Trying to load META-INF/validation.xml via user class loader
2018-12-17 20:56:18.715 [main] DEBUGo.h.v.internal.xml.config.ResourceLoaderHelper-Trying to load META-INF/validation.xml via TCCL
2018-12-17 20:56:18.716 [main] DEBUGo.h.v.internal.xml.config.ResourceLoaderHelper-Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-12-17 20:56:18.716 [main] DEBUGo.h.v.internal.xml.config.ValidationXmlParser-No META-INF/validation.xml found. Using annotation based configuration only.
2018-12-17 20:56:18.723 [main] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-12-17 20:56:18.723 [main] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-12-17 20:56:18.724 [main] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-12-17 20:56:18.724 [main] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-12-17 20:56:18.724 [main] DEBUGo.h.validator.internal.engine.ValidatorFactoryImpl-HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-12-17 20:56:19.419 [main] INFO com.alibaba.dubbo.config.AbstractConfig- [DUBBO] The service ready on spring started. service: com.project.framework.service.UserService, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.500 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.538 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.557 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.584 [main] INFO com.alibaba.dubbo.config.AbstractConfig- [DUBBO] Export dubbo service com.project.framework.service.UserService to local registry, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.587 [main] INFO com.alibaba.dubbo.config.AbstractConfig- [DUBBO] Export dubbo service com.project.framework.service.UserService to url dubbo://10.0.75.1:20880/com.project.framework.service.UserService?anyhost=true&application=dubbo-server&bean.name=com.project.framework.service.UserService&bind.ip=10.0.75.1&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.project.framework.service.UserService&methods=reginseter&pid=5572&qos.enable=false&side=provider&timestamp=1545051379433, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.596 [main] INFO com.alibaba.dubbo.config.AbstractConfig- [DUBBO] Register dubbo service com.project.framework.service.UserService url dubbo://10.0.75.1:20880/com.project.framework.service.UserService?anyhost=true&application=dubbo-server&bean.name=com.project.framework.service.UserService&bind.ip=10.0.75.1&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.project.framework.service.UserService&methods=reginseter&pid=5572&qos.enable=false&side=provider&timestamp=1545051379433 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-server&dubbo=2.0.2&pid=5572&qos.enable=false&registry=zookeeper&timestamp=1545051379426, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.609 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.629 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.647 [main] INFO com.alibaba.dubbo.qos.protocol.QosProtocolWrapper- [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring boot configuration., dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.680 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.730 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.765 [main] DEBUGcom.alibaba.dubbo.common.extension.ExtensionLoader- [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.846 [main] DEBUGorg.jboss.netty.channel.socket.nio.SelectorUtil- [DUBBO] Using select timeout of 500, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.847 [main] DEBUGorg.jboss.netty.channel.socket.nio.SelectorUtil- [DUBBO] Epoll-bug workaround enabled = false, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:19.998 [main] INFO org.apache.catalina.core.StandardService-Stopping service [Tomcat]
2018-12-17 20:56:20.015 [main] ERRORorg.springframework.boot.SpringApplication-Application run failed
com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://10.0.75.1:20880/com.project.framework.service.UserService?anyhost=true&application=dubbo-server&bean.name=com.project.framework.service.UserService&bind.ip=10.0.75.1&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.2&generic=false&heartbeat=60000&interface=com.project.framework.service.UserService&methods=reginseter&pid=5572&qos.enable=false&side=provider&timestamp=1545051379433) Failed to bind NettyServer on /10.0.75.1:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:264)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:251)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:100)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:62)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:57)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:169)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216)
	at com.alibaba.dubbo.config.spring.ServiceBean.export(ServiceBean.java:291)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:131)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:53)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.project.framework.start.ApplicationsForXmlStart.main(ApplicationsForXmlStart.java:11)
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /10.0.75.1:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:61)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:32)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.bind(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:56)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:44)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:70)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:285)
	... 34 common frames omitted
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:272)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:63)
	... 41 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerBoss$RegisterTask.run(NioServerBoss.java:193)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.processTaskQueue(AbstractNioSelector.java:391)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:315)
	at org.jboss.netty.channel.socket.nio.NioServerBoss.run(NioServerBoss.java:42)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-12-17 20:56:20.021 [main] INFO c.a.d.c.s.b.f.a.ReferenceAnnotationBeanPostProcessor-class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
2018-12-17 20:56:20.023 [DubboShutdownHook] INFO com.alibaba.dubbo.config.DubboShutdownHook- [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:20.023 [DubboShutdownHook] INFO c.a.dubbo.registry.support.AbstractRegistryFactory- [DUBBO] Close all registries [], dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:20.023 [DubboShutdownHook] INFO com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol- [DUBBO] Unexport service: dubbo://10.0.75.1:20880/com.project.framework.service.UserService?anyhost=true&application=dubbo-server&bean.name=com.project.framework.service.UserService&bind.ip=10.0.75.1&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.project.framework.service.UserService&methods=reginseter&pid=5572&qos.enable=false&side=provider&timestamp=1545051379433, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:20.024 [DubboShutdownHook] INFO com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol- [DUBBO] Unexport service: injvm://127.0.0.1/com.project.framework.service.UserService?anyhost=true&application=dubbo-server&bean.name=com.project.framework.service.UserService&bind.ip=10.0.75.1&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.project.framework.service.UserService&methods=reginseter&pid=5572&qos.enable=false&side=provider&timestamp=1545051379433, dubbo version: 2.6.5, current host: 10.0.75.1
2018-12-17 20:56:20.564 [main-SendThread(127.0.0.1:2181)] DEBUGorg.apache.zookeeper.ClientCnxn-Got ping response for sessionid: 0x10001d0436a0001 after 1ms
2018-12-17 20:56:33.904 [main-SendThread(127.0.0.1:2181)] DEBUGorg.apache.zookeeper.ClientCnxn-Got ping response for sessionid: 0x10001d0436a0001 after 8ms
2018-12-17 20:56:47.238 [main-SendThread(127.0.0.1:2181)] DEBUGorg.apache.zookeeper.ClientCnxn-Got ping response for sessionid: 0x10001d0436a0001 after 8ms
